@page "/libros"
@using BlazorCRUD_libros.Modelos
@using BlazorCRUD_libros.Repositorio
@inject IRepositorio Repositorio

<h3 class="text-center">Lista de Libros</h3>
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-12"> 
                <h2 class="text-dark">Lista de Libros</h2>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class=" table table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Titulo</th>
                    <th>Descripción</th>
                    <th>Autor</th>
                    <th>Páginas</th>
                    <th>Precio</th>
                    <th>Fecha de Creación</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var libro in listaLibro)
                {
                    <tr>
                        <th>@libro.Id</th>
                        <th>@libro.Titulo</th>
                        <th>@libro.Descripcion</th>
                        <th>@libro.Autor</th>
                        <th>@libro.Paginas</th>
                        <th>@libro.Precio</th>
                        <th>@libro.FechaCreacion</th>
                        <th>
                            <a href="editar-libro/@libro.Id" class="btn btn-success btn-sm"><span class="oi oi-plus" aria-hidden="true"></span> Editar</a>
                            <button @onclick="@(()=> BorrarLibro(libro.Id))" class="btn btn-danger btn-sm"><span class="oi oi-delete" aria-hidden="true"> Borrar</span></button>

                        </th>
                    </tr>
                    
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Libro> listaLibro = new List<Libro>();
    protected override async Task OnInitializedAsync()
    {
        listaLibro = await Repositorio.getLibros();
    }

    private async Task BorrarLibro(int libroId)
    {
        await Repositorio.EliminarLibro(libroId);
        //actualizar la lista de libros
        listaLibro = await Repositorio.getLibros();
    }
}
